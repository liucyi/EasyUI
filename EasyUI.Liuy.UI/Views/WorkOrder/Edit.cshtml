@model EasyUI.Liuy.Domain.Models.WorkOrder

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>WorkOrder</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductId, "Product")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProductId", String.Empty)
            @Html.ValidationMessageFor(model => model.ProductId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Contact)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact)
            @Html.ValidationMessageFor(model => model.Contact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Sex)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sex)
            @Html.ValidationMessageFor(model => model.Sex)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProblemDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProblemDescription)
            @Html.ValidationMessageFor(model => model.ProblemDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProcessingMode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProcessingMode)
            @Html.ValidationMessageFor(model => model.ProcessingMode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Suggestion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Suggestion)
            @Html.ValidationMessageFor(model => model.Suggestion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SI)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SI)
            @Html.ValidationMessageFor(model => model.SI)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Attachment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Attachment)
            @Html.ValidationMessageFor(model => model.Attachment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SIM)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SIM)
            @Html.ValidationMessageFor(model => model.SIM)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Terminal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Terminal)
            @Html.ValidationMessageFor(model => model.Terminal)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Company)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Company)
            @Html.ValidationMessageFor(model => model.Company)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateTime)
            @Html.ValidationMessageFor(model => model.CreateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProcessingTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProcessingTime)
            @Html.ValidationMessageFor(model => model.ProcessingTime)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
